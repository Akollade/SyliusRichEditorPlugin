services:
  # Default configuration for services in *this* file
  _defaults:
    # Automatically injects dependencies in your services
    autowire: true
    # Automatically registers your services as commands, event subscribers, etc.
    autoconfigure: true
    # Allows optimizing the container by removing unused services; this also means
    # fetching services directly from the container via $container->get() won't work
    public: false

  # Makes classes in src/ available to be used as services;
  # this creates a service per class whose id is the fully-qualified class name
  Monsieurbiz\SyliusCmsPlugin\:
    resource: '../../*'
    exclude: '../../{Entity,Migrations,Tests,Kernel.php}'

  # Controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  Monsieurbiz\SyliusCmsPlugin\Controller\:
    resource: '../../Controller'
    tags: ['controller.service_arguments']

  # Add template with JS and CSS in admin
  Monsieurbiz\SyliusCmsPlugin\EventListener\Admin\AppBlock:
    arguments:
      $template: '@@MonsieurBizSyliusCmsPlugin/Admin/app.html.twig'
    tags:
      - { name: kernel.event_listener, event: sonata.block.event.sylius.admin.layout.javascripts, method: onBlockEvent }

  # UiElement Factory using classes in config
  Monsieurbiz\SyliusCmsPlugin\UiElement\Factory:
    arguments:
      $uiElementClasses: '%monsieur_biz_sylius_cms.ui_element_classes%'
